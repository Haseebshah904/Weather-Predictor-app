# -*- coding: utf-8 -*-
"""app.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1UEQDwfHcBct68qszc-auWgyGG5yKrt-m
"""

import streamlit as st
import numpy as np
import tensorflow as tf
from tensorflow.keras.preprocessing import image
from PIL import Image

# Load the saved model
model = tf.keras.models.load_model('weather_predictor.keras')  # Replace with your model path

# Define a function to preprocess the input image and make predictions
def predict_weather(img):
    img = img.convert('RGB')  # Convert to RGB if not already
    img = img.resize((150, 150))  # Resize the image to match model input size
    img = image.img_to_array(img)
    img = np.expand_dims(img, axis=0)
    img = img / 255.0  # Normalize the image
    predictions = model.predict(img)
    class_labels = ['cloudy', 'foggy', 'rainy', 'shine', 'sunrise']  # Update labels as necessary
    predicted_class = class_labels[np.argmax(predictions)]
    return predicted_class

# Streamlit interface
st.title("Weather Prediction Model")
st.write("Upload an image to predict the weather condition (sunny, rainy, cloudy, etc.).")

# File uploader for image input
uploaded_file = st.file_uploader("Choose an image...", type=["jpg", "jpeg", "png"])

if uploaded_file is not None:
    # Display the uploaded image
    image_display = Image.open(uploaded_file)
    st.image(image_display, caption='Uploaded Image', use_column_width=True)

    # Perform prediction
    prediction = predict_weather(image_display)

    # Display the prediction
    st.write(f"Predicted weather condition: {prediction}")